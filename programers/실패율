import java.util.Arrays;
import java.util.Comparator;

class Solution {
    public int[] solution(int N, int[] stages) {
        int[] answer = new int[N];
        double[] failrate = new double[N];

        int total = stages.length;  // 전체 플레이어 수

        // 각 스테이지의 실패율 계산
        for (int i = 1; i <= N; i++) {
            int a = 0; // 현재 스테이지에서 실패한 사람 수

            // 현재 스테이지에서 실패한 사람 수 세기
            for (int stage : stages) {
                if (stage == i) {
                    a++;
                }
            }

            // 실패율 계산 (0명 도달한 경우 예외 처리)
            if (total == 0) {
                failrate[i - 1] = 0;
            } else {
                failrate[i - 1] = (double) a / total;
            }

            total -= a; // 다음 스테이지에 도달한 사람 업데이트
        }

        // 실패율 정렬을 위한 인덱스 배열
        Integer[] indices = new Integer[N];
        for (int i = 0; i < N; i++) {
            indices[i] = i + 1; // 스테이지 번호 저장
        }

        // 실패율을 기준으로 내림차순 정렬 (실패율 같으면 스테이지 번호가 작은 순)
        Arrays.sort(indices, (a, b) -> {
            if (failrate[a - 1] == failrate[b - 1]) {
                return a - b; // 실패율이 같다면 스테이지 번호 순으로 정렬
            }
            return Double.compare(failrate[b - 1], failrate[a - 1]); // 실패율 내림차순 정렬
        });

        // 정렬된 결과를 answer 배열에 저장
        for (int i = 0; i < N; i++) {
            answer[i] = indices[i];
        }

        return answer;
    }
}
